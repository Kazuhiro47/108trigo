#!/usr/bin/python3
# coding=UTF-8

from math import sqrt, modf, isnan
from sys import argv

from help.man_help import *
from matrix_fct.matrix import *


def errors_check(argv):
	if (len(argv) == 1):
		exit(84)
	if (len(argv) == 2 and argv[1] == "-h"):
		man()
		exit(0)
	if (modf(sqrt(len(argv) - 2))[0] != 0):
		exit(84)
	try:
		if (float(argv[1]) >= 0 or float(argv[1]) < 0):
			exit(84)
	except ValueError:
		check = "ok"
	i = 2
	while (i < len(argv)):
		try:
			isnan(float(argv[i]))
		except ValueError:
			exit(84)
		i += 1
	return (sqrt(len(argv) - 2))

def retrieve_argument(argv):
	i = 2
	str = []
	while (i < len(argv)):
		str.append(argv[i])
		i += 1

	str = ''.join(str)
	return (str)

def main(argv, matrix_len):

	arguments = retrieve_argument(argv)
	matrix = create_matrix_with_str_arg(int(matrix_len), int(matrix_len), arguments)

	if (argv[1] == "COS"):
		print_matrix(cos_calculus(matrix))
	if (argv[1] == "EXP"):
		print_matrix(exp_calculus(matrix))
	if (argv[1] == "SIN"):
		print_matrix(sin_calculus(matrix))
	if (argv[1] == "COSH"):
		print_matrix(cosh_calculus(matrix))
	if (argv[1] == "SINH"):
		print_matrix(sinh_calculus(matrix))

matrix_len = errors_check(argv)
main(argv, matrix_len)