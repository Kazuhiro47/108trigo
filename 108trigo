#!/usr/bin/python3
# coding=UTF-8

from sys import argv
from man_help import *
from matrix import *
from math import pow, sqrt, modf, isnan

def errors_check(argv):
	if (len(argv) == 1):
		exit(84)
	if (modf(sqrt(len(argv) - 2))[0] != 0):
		exit(84)
	try:
		if (float(argv[1]) >= 0 or float(argv[1]) < 0):
			exit(84)
	except ValueError:
		check = "ok"
	i = 2
	while (i < len(argv)):
		try:
			isnan(float(argv[i]))
		except ValueError:
			exit(84)
		i += 1
	return (sqrt(len(argv) - 2))

def retrieve_argument(argv):
	i = 2
	str = []
	while (i < len(argv)):
		str.append(argv[i])
		i += 1

	str = ''.join(str)
	return (str)

def cos_calculus(m):
	for n in range(42):
		result = divide_matrix_by_one_number(factorielle(2 * n), pow_matrix(m, (2 * n)))
		result = multiply_matrix_by_one_number(pow(-1, n), result)
		result = add_matrix(result, pow_matrix(m, ((2 * n) + 1)))
	return (result)

def main(argv, matrix_len):

	arguments = retrieve_argument(argv)
	matrix = create_matrix_with_str_arg(int(matrix_len), int(matrix_len), arguments)
	print_matrix(matrix)

	print_matrix(cos_calculus(matrix))

matrix_len = errors_check(argv)
main(argv, matrix_len)